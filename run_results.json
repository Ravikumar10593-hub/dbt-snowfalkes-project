{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2023-12-27T22:34:54.725627Z", "invocation_id": "077a2fba-5cf5-49fd-a10b-661e12f84891", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.248160Z", "completed_at": "2023-12-27T22:34:51.254176Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.255178Z", "completed_at": "2023-12-27T22:34:51.255178Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009023666381835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_first_project.stg_avg_telemetry", "compiled": true, "compiled_code": "-- Calculate average telemetry values per machine\r\nWITH TelemetryFeatures AS (\r\n    SELECT\r\n        t.DATETIME,\r\n        t.MACHINEID,\r\n        t.VOLT,\r\n        t.ROTATE,\r\n        t.PRESSURE,\r\n        t.VIBRATION,\r\n        m.MODEL,\r\n        m.AGE\r\n    FROM\r\n        DBT_TEST.DBO.PDM_TELEMETRY t\r\n    JOIN DBT_TEST.DBO.PDM_MACHINES m ON t.MACHINEID = m.MACHINEID\r\n)\r\n\r\n, AvgTelemetry AS (\r\n    SELECT\r\n        MACHINEID,\r\n        AVG(VOLT) AS AVG_VOLT,\r\n        AVG(ROTATE) AS AVG_ROTATE,\r\n        AVG(PRESSURE) AS AVG_PRESSURE,\r\n        AVG(VIBRATION) AS AVG_VIBRATION\r\n    FROM\r\n        TelemetryFeatures\r\n    GROUP BY\r\n        MACHINEID\r\n)\r\n\r\nselect * from AvgTelemetry", "relation_name": "DBT_TEST.dbo_staging.stg_avg_telemetry"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.258186Z", "completed_at": "2023-12-27T22:34:51.360454Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.361456Z", "completed_at": "2023-12-27T22:34:51.361456Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10527515411376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_first_project.stg_error_data", "compiled": true, "compiled_code": "-- Combine with error data\r\nwith ErrorData AS (\r\n    SELECT\r\n        e.DATETIME,\r\n        e.MACHINEID,\r\n        e.ERRORID\r\n    FROM\r\n        DBT_TEST.DBO.PDM_ERRORS e\r\n)\r\n\r\nSELECT * from ErrorData", "relation_name": "DBT_TEST.dbo_staging.stg_error_data"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.365467Z", "completed_at": "2023-12-27T22:34:51.370480Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.371482Z", "completed_at": "2023-12-27T22:34:51.371482Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008020162582397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_first_project.stg_failure_data", "compiled": true, "compiled_code": "-- Combine with failure data\r\nwith FailureData AS (\r\n    SELECT\r\n        f.DATETIME,\r\n        f.MACHINEID,\r\n        f.FAILURE\r\n    FROM\r\n        DBT_TEST.DBO.PDM_FAILURES f\r\n)\r\n\r\nselect * from FailureData", "relation_name": "DBT_TEST.dbo_staging.stg_failure_data"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.374490Z", "completed_at": "2023-12-27T22:34:51.378501Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.379504Z", "completed_at": "2023-12-27T22:34:51.379504Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007018566131591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_first_project.stg_maintenance_data", "compiled": true, "compiled_code": "-- Combine with maintenance data\r\nwith MaintenanceData AS (\r\n    SELECT\r\n        m.DATETIME,\r\n        m.MACHINEID,\r\n        m.COMP\r\n    FROM\r\n        DBT_TEST.DBO.PDM_MAINT m\r\n)\r\n\r\nselect * from MaintenanceData", "relation_name": "DBT_TEST.dbo_staging.stg_maintenance_data"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.383514Z", "completed_at": "2023-12-27T22:34:51.386522Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.387525Z", "completed_at": "2023-12-27T22:34:51.387525Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007018327713012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_first_project.stg_telemetry_features", "compiled": true, "compiled_code": "-- Combine telemetry data with machine features\r\nWITH TelemetryFeatures AS (\r\n    SELECT\r\n        t.DATETIME,\r\n        t.MACHINEID,\r\n        t.VOLT,\r\n        t.ROTATE,\r\n        t.PRESSURE,\r\n        t.VIBRATION,\r\n        m.MODEL,\r\n        m.AGE\r\n    FROM\r\n        DBT_TEST.DBO.PDM_TELEMETRY t\r\n    JOIN DBT_TEST.DBO.PDM_MACHINES m ON t.MACHINEID = m.MACHINEID\r\n)\r\n\r\nselect * from TelemetryFeatures", "relation_name": "DBT_TEST.dbo_staging.stg_telemetry_features"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.390533Z", "completed_at": "2023-12-27T22:34:51.429635Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.430638Z", "completed_at": "2023-12-27T22:34:51.430638Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.042110443115234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_name\n\n,\n                \n        cast(123456789.99 as float) as metric_value\n\n,\n                \n        cast('dummy_string' as varchar) as source_value\n\n,\n                cast('2091-02-17' as timestamp) as bucket_start\n\n,\n                cast('2091-02-17' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as timestamp) as updated_at\n\n,\n                \n        cast('dummy_string' as varchar) as dimension\n\n,\n                \n        cast('dummy_string' as varchar) as dimension_value\n\n,\n                \n        cast('dummy_string' as varchar) as metric_properties\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "DBT_TEST.dbo.data_monitoring_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.433645Z", "completed_at": "2023-12-27T22:34:51.448685Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.450690Z", "completed_at": "2023-12-27T22:34:51.450690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018047094345092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_columns"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.452696Z", "completed_at": "2023-12-27T22:34:51.468738Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.468738Z", "completed_at": "2023-12-27T22:34:51.468738Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018047332763671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as maturity\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('dummy_string' as varchar) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_exposures"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.471745Z", "completed_at": "2023-12-27T22:34:51.495809Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.496811Z", "completed_at": "2023-12-27T22:34:51.496811Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027070999145507812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_run_id\n\n,\n                \n        cast('dummy_string' as varchar) as run_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as run_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as command\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_version\n\n,\n                \n        cast('dummy_string' as varchar) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as vars\n\n,\n                \n        cast('dummy_string' as varchar) as target_name\n\n,\n                \n        cast('dummy_string' as varchar) as target_database\n\n,\n                \n        cast('dummy_string' as varchar) as target_schema\n\n,\n                \n        cast('dummy_string' as varchar) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as yaml_selector\n\n,\n                \n        cast('dummy_string' as varchar) as project_id\n\n,\n                \n        cast('dummy_string' as varchar) as project_name\n\n,\n                \n        cast('dummy_string' as varchar) as env\n\n,\n                \n        cast('dummy_string' as varchar) as env_id\n\n,\n                \n        cast('dummy_string' as varchar) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as cause\n\n,\n                \n        cast('dummy_string' as varchar) as pull_request_id\n\n,\n                \n        cast('dummy_string' as varchar) as git_sha\n\n,\n                \n        cast('dummy_string' as varchar) as orchestrator\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_user\n\n,\n                \n        cast('dummy_string' as varchar) as job_url\n\n,\n                \n        cast('dummy_string' as varchar) as job_run_url\n\n,\n                \n        cast('dummy_string' as varchar) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_invocations"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.499819Z", "completed_at": "2023-12-27T22:34:51.515861Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.516864Z", "completed_at": "2023-12-27T22:34:51.516864Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019049644470214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('dummy_string' as varchar) as model\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as sql\n\n,\n                \n        cast('dummy_string' as varchar) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.518869Z", "completed_at": "2023-12-27T22:34:51.534911Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.535913Z", "completed_at": "2023-12-27T22:34:51.535913Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019049882888793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_models"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.537919Z", "completed_at": "2023-12-27T22:34:51.556969Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.557971Z", "completed_at": "2023-12-27T22:34:51.557971Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02205801010131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as message\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast(123456789.99 as float) as execution_time\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as query_id\n\n,\n                \n        cast('dummy_string' as varchar) as thread_id\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('dummy_string' as varchar) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.560979Z", "completed_at": "2023-12-27T22:34:51.575016Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.576018Z", "completed_at": "2023-12-27T22:34:51.576018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0170440673828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_seeds"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.579026Z", "completed_at": "2023-12-27T22:34:51.593063Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.594066Z", "completed_at": "2023-12-27T22:34:51.594066Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017045259475708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_snapshots"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.597074Z", "completed_at": "2023-12-27T22:34:51.611110Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.612113Z", "completed_at": "2023-12-27T22:34:51.612113Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0170440673828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as varchar) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as error\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "DBT_TEST.dbo.dbt_source_freshness_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.614118Z", "completed_at": "2023-12-27T22:34:51.632165Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.633168Z", "completed_at": "2023-12-27T22:34:51.633168Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019050121307373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as source_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as identifier\n\n,\n                \n        cast('dummy_string' as varchar) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_description\n\n,\n                \n        cast('dummy_string' as varchar) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_sources"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.635173Z", "completed_at": "2023-12-27T22:34:51.656228Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.657231Z", "completed_at": "2023-12-27T22:34:51.657231Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023060083389282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as short_name\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as test_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as warn_if\n\n,\n                \n        cast('dummy_string' as varchar) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as test_namespace\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as varchar) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.dbt_tests"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.659236Z", "completed_at": "2023-12-27T22:34:51.681294Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.682297Z", "completed_at": "2023-12-27T22:34:51.682297Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025065898895263672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_type\n\n,\n                \n        cast('dummy_string' as varchar) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_description\n\n,\n                \n        cast('dummy_string' as varchar) as owners\n\n,\n                \n        cast('dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_query\n\n,\n                \n        cast('dummy_string' as varchar) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as test_short_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "DBT_TEST.dbo.elementary_test_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.685305Z", "completed_at": "2023-12-27T22:34:51.692324Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.693326Z", "completed_at": "2023-12-27T22:34:51.693326Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009023666381835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.13.1' as dbt_pkg_version", "relation_name": "DBT_TEST.dbo.metadata"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.695331Z", "completed_at": "2023-12-27T22:34:51.706360Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.707363Z", "completed_at": "2023-12-27T22:34:51.707363Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013034582138061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as column_state_id\n\n,\n                \n        cast('dummy_string' as varchar) as full_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "DBT_TEST.dbo.schema_columns_snapshot"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.709368Z", "completed_at": "2023-12-27T22:34:51.717389Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.718391Z", "completed_at": "2023-12-27T22:34:51.718391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011029243469238281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-end-0", "compiled": true, "compiled_code": "\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.721399Z", "completed_at": "2023-12-27T22:34:51.731426Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.732428Z", "completed_at": "2023-12-27T22:34:51.732428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01303410530090332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-start-0", "compiled": true, "compiled_code": "\n  \n  \n\n  \n  \n\n  \n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.734433Z", "completed_at": "2023-12-27T22:34:51.737441Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.738444Z", "completed_at": "2023-12-27T22:34:51.738444Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005013465881347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_first_project.PdM_errors", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.740449Z", "completed_at": "2023-12-27T22:34:51.742454Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.742454Z", "completed_at": "2023-12-27T22:34:51.742454Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004010438919067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_first_project.PdM_failures", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.744460Z", "completed_at": "2023-12-27T22:34:51.746465Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.747467Z", "completed_at": "2023-12-27T22:34:51.747467Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003007650375366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_first_project.PdM_machines", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.749473Z", "completed_at": "2023-12-27T22:34:51.750475Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.751478Z", "completed_at": "2023-12-27T22:34:51.751478Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004010438919067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_first_project.PdM_maint", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.753483Z", "completed_at": "2023-12-27T22:34:51.755488Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.755488Z", "completed_at": "2023-12-27T22:34:51.755488Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0030078887939453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_first_project.PdM_telemetry", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.758496Z", "completed_at": "2023-12-27T22:34:51.762507Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.763509Z", "completed_at": "2023-12-27T22:34:51.763509Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006015300750732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_first_project.ComprehensiveInsights", "compiled": true, "compiled_code": "-- Combine telemetry data with machine features\n\n\nWITH TelemetryFeatures AS (\n    SELECT * FROM DBT_TEST.dbo_staging.stg_telemetry_features\n  \n)\n\n-- Calculate average telemetry values per machine\n, AvgTelemetry AS (\n    SELECT * FROM DBT_TEST.dbo_staging.stg_avg_telemetry\n)\n\n-- Combine with error data\n, ErrorData AS (\n    SELECT * FROM DBT_TEST.dbo_staging.stg_error_data\n)\n\n-- Combine with maintenance data\n, MaintenanceData AS (\n    SELECT * FROM DBT_TEST.dbo_staging.stg_maintenance_data\n)\n\n-- Combine with failure data\n, FailureData AS (\n    SELECT * FROM DBT_TEST.dbo_staging.stg_failure_data\n),\n\n-- Combine all data for comprehensive insights\nComprehensiveInsights AS (\n    SELECT\n        tf.DATETIME,\n        tf.MACHINEID,\n        tf.MODEL,\n        tf.AGE,\n        at.AVG_VOLT,\n        at.AVG_ROTATE,\n        at.AVG_PRESSURE,\n        at.AVG_VIBRATION,\n        ed.ERRORID,\n        md.COMP,\n        fd.FAILURE\n    FROM\n        TelemetryFeatures tf\n    LEFT JOIN AvgTelemetry at ON tf.MACHINEID = at.MACHINEID\n    LEFT JOIN ErrorData ed ON tf.MACHINEID = ed.MACHINEID AND tf.DATETIME = ed.DATETIME\n    LEFT JOIN MaintenanceData md ON tf.MACHINEID = md.MACHINEID AND tf.DATETIME = md.DATETIME\n    LEFT JOIN FailureData fd ON tf.MACHINEID = fd.MACHINEID AND tf.DATETIME = fd.DATETIME\n)\n\nselect * from ComprehensiveInsights", "relation_name": "DBT_TEST.dbo_final_table.ComprehensiveInsights"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.765515Z", "completed_at": "2023-12-27T22:34:51.786570Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.787573Z", "completed_at": "2023-12-27T22:34:51.787573Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023060083389282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from DBT_TEST.dbo.data_monitoring_metrics\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    dateadd(day, cast(-7 as integer), cast(date_trunc('day', \n  current_timestamp::timestamp\n) as timestamp))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "DBT_TEST.dbo.metrics_anomaly_score"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.789577Z", "completed_at": "2023-12-27T22:34:51.794591Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.795594Z", "completed_at": "2023-12-27T22:34:51.795594Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008020877838134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from DBT_TEST.dbo.data_monitoring_metrics\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "DBT_TEST.dbo.monitors_runs"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.797599Z", "completed_at": "2023-12-27T22:34:51.809630Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.810633Z", "completed_at": "2023-12-27T22:34:51.810633Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015039205551147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    datediff(\n        second,\n        \nmin(cast(run_started_at as timestamp))\n,\n        \nmax(cast(run_completed_at as timestamp))\n\n        )\n as job_run_execution_time\n  from DBT_TEST.dbo.dbt_invocations\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "DBT_TEST.dbo.job_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.812638Z", "completed_at": "2023-12-27T22:34:51.821662Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.822664Z", "completed_at": "2023-12-27T22:34:51.822664Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010026216506958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from DBT_TEST.dbo.dbt_run_results\n),\n\ndbt_models as (\n    select * from DBT_TEST.dbo.dbt_models\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "DBT_TEST.dbo.model_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.824670Z", "completed_at": "2023-12-27T22:34:51.828680Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.829683Z", "completed_at": "2023-12-27T22:34:51.829683Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007018327713012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from DBT_TEST.dbo.dbt_run_results\n),\n\ndbt_snapshots as (\n    select * from DBT_TEST.dbo.dbt_snapshots\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "DBT_TEST.dbo.snapshot_run_results"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.832690Z", "completed_at": "2023-12-27T22:34:51.838706Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:51.838706Z", "completed_at": "2023-12-27T22:34:51.838706Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00801992416381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from DBT_TEST.dbo.dbt_source_freshness_results\n),\n\nsources as (\n  select * from DBT_TEST.dbo.dbt_sources\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  cast(results.generated_at as timestamp) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "DBT_TEST.dbo.alerts_dbt_source_freshness"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:51.841714Z", "completed_at": "2023-12-27T22:34:54.327898Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.328899Z", "completed_at": "2023-12-27T22:34:54.328899Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.6773860454559326, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.information_schema_columns", "compiled": true, "compiled_code": "\n\n    \n  \n    \n  \n\n  with dbt_models_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from DBT_TEST.dbo.dbt_models\n  ),\n\n  dbt_snapshots_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from DBT_TEST.dbo.dbt_snapshots\n  ),\n\n  dbt_sources_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from DBT_TEST.dbo.dbt_sources\n  ),\n\n  dbt_seeds_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from DBT_TEST.dbo.dbt_seeds\n  ),\n\n  tables_information as (\n      select * from dbt_models_data\n      union all\n      select * from dbt_sources_data\n      union all\n      select * from dbt_snapshots_data\n      union all\n      select * from dbt_seeds_data\n  ),\n\n  columns_information as (\n      \n    \n    \n    \n        (\n    \n    \n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from DBT_TEST.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('dbo_final_table')\n    \n)\n        \n            union all\n        \n    \n        (\n    \n    \n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from DBT_TEST.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('dbo_staging')\n    \n)\n        \n            union all\n        \n    \n        (\n    \n    \n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from DBT_TEST.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('dbo')\n    \n)\n        \n    \n\n\n\n  ),\n\n  information_schema_columns as (\n      select col_info.*\n      from tables_information tbl_info\n      join columns_information col_info\n          on (lower(tbl_info.database_name) = lower(col_info.database_name) and\n              lower(tbl_info.schema_name) = lower(col_info.schema_name) and\n              lower(tbl_info.table_name) = lower(col_info.table_name)\n          )\n  )\n\n  select *\n  from information_schema_columns\n\n", "relation_name": "DBT_TEST.dbo.information_schema_columns"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.520088Z", "completed_at": "2023-12-27T22:34:54.526119Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.527122Z", "completed_at": "2023-12-27T22:34:54.527122Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009008169174194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_models\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_tests\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_sources\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_snapshots\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_metrics\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_exposures\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_seeds\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom DBT_TEST.dbo.dbt_columns\n\n\norder by metadata_hash", "relation_name": "DBT_TEST.dbo.dbt_artifacts_hashes"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.529111Z", "completed_at": "2023-12-27T22:34:54.536129Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.537131Z", "completed_at": "2023-12-27T22:34:54.537131Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010025262832641602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from DBT_TEST.dbo.elementary_test_results\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "DBT_TEST.dbo.alerts_anomaly_detection"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.539137Z", "completed_at": "2023-12-27T22:34:54.546155Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.546155Z", "completed_at": "2023-12-27T22:34:54.546155Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009023427963256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from DBT_TEST.dbo.elementary_test_results\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "DBT_TEST.dbo.alerts_dbt_tests"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.549163Z", "completed_at": "2023-12-27T22:34:54.555178Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.556181Z", "completed_at": "2023-12-27T22:34:54.556181Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008020877838134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from DBT_TEST.dbo.elementary_test_results\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "DBT_TEST.dbo.alerts_schema_changes"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.558186Z", "completed_at": "2023-12-27T22:34:54.567210Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.568213Z", "completed_at": "2023-12-27T22:34:54.568213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012029886245727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "\n\n-- depends_on: DBT_TEST.dbo.elementary_test_results\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_row\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "DBT_TEST.dbo.test_result_rows"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.571221Z", "completed_at": "2023-12-27T22:34:54.580244Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.581247Z", "completed_at": "2023-12-27T22:34:54.581247Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012031316757202148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_first_project.not_null_ComprehensiveInsights_DATETIME.4e970aed21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect DATETIME\nfrom DBT_TEST.dbo_final_table.ComprehensiveInsights\nwhere DATETIME is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.584255Z", "completed_at": "2023-12-27T22:34:54.590270Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.590270Z", "completed_at": "2023-12-27T22:34:54.590270Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008021116256713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_first_project.unique_ComprehensiveInsights_DATETIME.110801340c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    DATETIME as unique_field,\n    count(*) as n_records\n\nfrom DBT_TEST.dbo_final_table.ComprehensiveInsights\nwhere DATETIME is not null\ngroup by DATETIME\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.593279Z", "completed_at": "2023-12-27T22:34:54.703568Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.704570Z", "completed_at": "2023-12-27T22:34:54.704570Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11329483985900879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from DBT_TEST.dbo.metrics_anomaly_score\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \"is_anomaly_1_5\",\n        case when abs(anomaly_score) >= 2 then true else false end as \"is_anomaly_2\",\n        case when abs(anomaly_score) >= 2.5 then true else false end as \"is_anomaly_2_5\",\n        case when abs(anomaly_score) >= 3 then true else false end as \"is_anomaly_3\",\n        case when abs(anomaly_score) >= 3.5 then true else false end as \"is_anomaly_3_5\",\n        case when abs(anomaly_score) >= 4 then true else false end as \"is_anomaly_4\",\n        case when abs(anomaly_score) >= 4.5 then true else false end as \"is_anomaly_4_5\"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "DBT_TEST.dbo.anomaly_threshold_sensitivity"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.707578Z", "completed_at": "2023-12-27T22:34:54.714596Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.714596Z", "completed_at": "2023-12-27T22:34:54.714596Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009022951126098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from DBT_TEST.dbo.model_run_results\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from DBT_TEST.dbo.snapshot_run_results\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       cast(generated_at as timestamp) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "DBT_TEST.dbo.alerts_dbt_models"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-27T22:34:54.717604Z", "completed_at": "2023-12-27T22:34:54.721614Z"}, {"name": "execute", "started_at": "2023-12-27T22:34:54.722617Z", "completed_at": "2023-12-27T22:34:54.722617Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0070188045501708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.enriched_columns", "compiled": true, "compiled_code": "\n\n\nwith information_schema_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(column_name) as name,\n        data_type\n    from DBT_TEST.dbo.information_schema_columns\n),\n\ndbt_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(name) as name,\n        description\n    from DBT_TEST.dbo.dbt_columns\n)\n\nselect\n    database_name,\n    schema_name,\n    table_name,\n    name,\n    data_type,\n    description\nfrom information_schema_columns\nleft join dbt_columns using (database_name, schema_name, table_name, name)", "relation_name": "DBT_TEST.dbo.enriched_columns"}], "elapsed_time": 6.750824213027954, "args": {"defer": false, "exclude": [], "empty_catalog": false, "profiles_dir": "C:\\Users\\ravi.kumar\\.dbt", "static": false, "log_format": "default", "cache_selected_only": false, "log_path": "C:\\Users\\ravi.kumar\\Desktop\\Project\\dbt_project\\dbt_first_project\\logs", "use_colors_file": true, "write_json": true, "partial_parse_file_diff": true, "show_resource_report": false, "select": [], "warn_error_options": {"include": [], "exclude": []}, "version_check": true, "invocation_command": "dbt docs generate", "project_dir": "C:\\Users\\ravi.kumar\\Desktop\\Project\\dbt_project\\dbt_first_project", "print": true, "quiet": false, "log_level": "info", "strict_mode": false, "compile": true, "use_colors": true, "static_parser": true, "favor_state": false, "macro_debugging": false, "partial_parse": true, "send_anonymous_usage_stats": true, "vars": {}, "printer_width": 80, "log_format_file": "debug", "introspect": true, "log_level_file": "debug", "indirect_selection": "eager", "log_file_max_bytes": 10485760, "which": "generate", "enable_legacy_logger": false, "populate_cache": true}}